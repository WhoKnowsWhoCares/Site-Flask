services:
  app:
    container_name: site-flask-app
    restart: unless-stopped
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    expose:
      - ${PORT}
    healthcheck:
      test: curl --fail -s http://localhost:${PORT}/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
    command:
      [
        "gunicorn",
        "-k",
        "gevent",
        "-w",
        "3",
        "-b",
        "0.0.0.0:${PORT}",
        "wsgi:app",
      ]

  db:
    container_name: site-flask-db
    # image: postgres:14.7
    image: mysql:8.0
    restart: unless-stopped
    environment:
      # POSTGRES_DB: ${DB_NAME}
      # POSTGRES_USER: ${DB_USER}
      # POSTGRES_PASSWORD: ${DB_PASS}
      # POSTGRES_PORT: ${DB_PORT}
      # POSTGRES_HOST: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
